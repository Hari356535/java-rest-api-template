plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.+'
	id 'io.spring.dependency-management' version '1.1.+'
	id "com.diffplug.spotless" version "6.+"
	id 'com.github.spotbugs' version '6.+'
	id 'pmd'
	id 'jacoco'
}

apply from: 'gradle/spotless.gradle'
apply from: 'gradle/spotbugs.gradle'
apply from: 'gradle/pmd.gradle'
apply from: 'gradle/jacoco.gradle'
apply from: 'gradle/integration.gradle'

group = 'com.rangerforge'
version = '1.0.0'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Dependencies
	implementation 'org.springframework.boot:spring-boot-starter-actuator:3.3.+'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.+'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.3.+'
	implementation 'org.springframework.boot:spring-boot-starter-webflux:3.3.+'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.+'

	// Uncomment if you wish to use Docker Compose on local application startup
	//developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	// OpenAPI Auto-Generated Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.+'

	// Mock DB
	implementation 'com.h2database:h2'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.+'
	annotationProcessor 'org.projectlombok:lombok:1.18.+'

	// Inter-Object Mapping
	implementation "org.mapstruct:mapstruct:$mapstructVersion"
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

	// Unit testing
	testImplementation 'org.mockito:mockito-core:5.+'
	testImplementation 'org.instancio:instancio-junit:4.+' // Creating test fixtures
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.+' // Mocking WebClient calls

	// Arch Unit
	testImplementation 'com.tngtech.archunit:archunit-junit5:1.3.+'

	// Wiremock
	testImplementation 'org.wiremock:wiremock-standalone:3.8.+'

	// TODO Fix runtime issue with Find Security Bugs
//	spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.13.+'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

bootRun {
	args = ["--spring.profiles.active=local"]
}

tasks.named("processIntegrationResources", Copy) {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
